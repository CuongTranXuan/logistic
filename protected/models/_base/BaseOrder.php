<?php

/**
 * This is the model base class for the table "{{order}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Order".
 *
 * Columns in table "{{order}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $active
 * @property integer $created_time
 * @property integer $updated_time
 * @property integer $user_id
 * @property integer $status
 * @property double $total_price
 * @property double $total_weight
 * @property integer $is_paid
 * @property string $description
 * @property double $deposit_amount
 * @property double $total_delivery_price
 * @property double $total_real_price
 * @property integer $total_quantity
 * @property double $total_real_price_ndt
 * @property double $total_price_ndt
 * @property double $total_delivery_price_ndt
 * @property double $weight_price
 * @property double $service_price
 * @property double $final_price
 * @property double $remaining_amount
 * @property double $exchange_rate
 * @property double $shipping_home_price
 * @property double $total_weight_price
 * @property double $service_price_percentage
 * @property double $extra_price
 * @property double $real_exchange_rate
 * @property integer $is_weight_price_fixed
 * @property integer $sms_status
 * @property string $shop_name
 * @property double $delivery_price_ndt
 * @property double $real_price
 * @property string $shop_id
 * @property string $order_code
 * @property integer $is_service_price_fixed
 * @property integer $is_total_weight_price_fixed
 * @property double $volume_price
 * @property double $total_volume
 * @property string $name
 * @property string $extra_description
 *
 */
abstract class BaseOrder extends SModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{order}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Order|Orders', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('created_time, updated_time, user_id', 'required'),
			array('active, created_time, updated_time, user_id, status, is_paid, total_quantity, is_weight_price_fixed, sms_status, is_service_price_fixed, is_total_weight_price_fixed', 'numerical', 'integerOnly'=>true),
			array('total_price, total_weight, deposit_amount, total_delivery_price, total_real_price, total_real_price_ndt, total_price_ndt, total_delivery_price_ndt, weight_price, service_price, final_price, remaining_amount, exchange_rate, shipping_home_price, total_weight_price, service_price_percentage, extra_price, real_exchange_rate, delivery_price_ndt, real_price, volume_price, total_volume', 'numerical'),
			array('description, extra_description', 'length', 'max'=>500),
			array('shop_name, order_code, name', 'length', 'max'=>100),
			array('shop_id', 'length', 'max'=>200),
			array('active, status, total_price, total_weight, is_paid, description, deposit_amount, total_delivery_price, total_real_price, total_quantity, total_real_price_ndt, total_price_ndt, total_delivery_price_ndt, weight_price, service_price, final_price, remaining_amount, exchange_rate, shipping_home_price, total_weight_price, service_price_percentage, extra_price, real_exchange_rate, is_weight_price_fixed, sms_status, shop_name, delivery_price_ndt, real_price, shop_id, order_code, is_service_price_fixed, is_total_weight_price_fixed, volume_price, total_volume, name, extra_description', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, active, created_time, updated_time, user_id, status, total_price, total_weight, is_paid, description, deposit_amount, total_delivery_price, total_real_price, total_quantity, total_real_price_ndt, total_price_ndt, total_delivery_price_ndt, weight_price, service_price, final_price, remaining_amount, exchange_rate, shipping_home_price, total_weight_price, service_price_percentage, extra_price, real_exchange_rate, is_weight_price_fixed, sms_status, shop_name, delivery_price_ndt, real_price, shop_id, order_code, is_service_price_fixed, is_total_weight_price_fixed, volume_price, total_volume, name, extra_description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'active' => Yii::t('app', 'Active'),
			'created_time' => Yii::t('app', 'Created Time'),
			'updated_time' => Yii::t('app', 'Updated Time'),
			'user_id' => Yii::t('app', 'User'),
			'status' => Yii::t('app', 'Status'),
			'total_price' => Yii::t('app', 'Total Price'),
			'total_weight' => Yii::t('app', 'Total Weight'),
			'is_paid' => Yii::t('app', 'Is Paid'),
			'description' => Yii::t('app', 'Description'),
			'deposit_amount' => Yii::t('app', 'Deposit Amount'),
			'total_delivery_price' => Yii::t('app', 'Total Delivery Price'),
			'total_real_price' => Yii::t('app', 'Total Real Price'),
			'total_quantity' => Yii::t('app', 'Total Quantity'),
			'total_real_price_ndt' => Yii::t('app', 'Total Real Price Ndt'),
			'total_price_ndt' => Yii::t('app', 'Total Price Ndt'),
			'total_delivery_price_ndt' => Yii::t('app', 'Total Delivery Price Ndt'),
			'weight_price' => Yii::t('app', 'Weight Price'),
			'service_price' => Yii::t('app', 'Service Price'),
			'final_price' => Yii::t('app', 'Final Price'),
			'remaining_amount' => Yii::t('app', 'Remaining Amount'),
			'exchange_rate' => Yii::t('app', 'Exchange Rate'),
			'shipping_home_price' => Yii::t('app', 'Shipping Home Price'),
			'total_weight_price' => Yii::t('app', 'Total Weight Price'),
			'service_price_percentage' => Yii::t('app', 'Service Price Percentage'),
			'extra_price' => Yii::t('app', 'Extra Price'),
			'real_exchange_rate' => Yii::t('app', 'Real Exchange Rate'),
			'is_weight_price_fixed' => Yii::t('app', 'Is Weight Price Fixed'),
			'sms_status' => Yii::t('app', 'Sms Status'),
			'shop_name' => Yii::t('app', 'Shop Name'),
			'delivery_price_ndt' => Yii::t('app', 'Delivery Price Ndt'),
			'real_price' => Yii::t('app', 'Real Price'),
			'shop_id' => Yii::t('app', 'Shop'),
			'order_code' => Yii::t('app', 'Order Code'),
			'is_service_price_fixed' => Yii::t('app', 'Is Service Price Fixed'),
			'is_total_weight_price_fixed' => Yii::t('app', 'Is Total Weight Price Fixed'),
			'volume_price' => Yii::t('app', 'Volume Price'),
			'total_volume' => Yii::t('app', 'Total Volume'),
			'name' => Yii::t('app', 'Name'),
			'extra_description' => Yii::t('app', 'Extra Description'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('active', $this->active);
		$criteria->compare('created_time', $this->created_time);
		$criteria->compare('updated_time', $this->updated_time);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('status', $this->status);
		$criteria->compare('total_price', $this->total_price);
		$criteria->compare('total_weight', $this->total_weight);
		$criteria->compare('is_paid', $this->is_paid);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('deposit_amount', $this->deposit_amount);
		$criteria->compare('total_delivery_price', $this->total_delivery_price);
		$criteria->compare('total_real_price', $this->total_real_price);
		$criteria->compare('total_quantity', $this->total_quantity);
		$criteria->compare('total_real_price_ndt', $this->total_real_price_ndt);
		$criteria->compare('total_price_ndt', $this->total_price_ndt);
		$criteria->compare('total_delivery_price_ndt', $this->total_delivery_price_ndt);
		$criteria->compare('weight_price', $this->weight_price);
		$criteria->compare('service_price', $this->service_price);
		$criteria->compare('final_price', $this->final_price);
		$criteria->compare('remaining_amount', $this->remaining_amount);
		$criteria->compare('exchange_rate', $this->exchange_rate);
		$criteria->compare('shipping_home_price', $this->shipping_home_price);
		$criteria->compare('total_weight_price', $this->total_weight_price);
		$criteria->compare('service_price_percentage', $this->service_price_percentage);
		$criteria->compare('extra_price', $this->extra_price);
		$criteria->compare('real_exchange_rate', $this->real_exchange_rate);
		$criteria->compare('is_weight_price_fixed', $this->is_weight_price_fixed);
		$criteria->compare('sms_status', $this->sms_status);
		$criteria->compare('shop_name', $this->shop_name, true);
		$criteria->compare('delivery_price_ndt', $this->delivery_price_ndt);
		$criteria->compare('real_price', $this->real_price);
		$criteria->compare('shop_id', $this->shop_id, true);
		$criteria->compare('order_code', $this->order_code, true);
		$criteria->compare('is_service_price_fixed', $this->is_service_price_fixed);
		$criteria->compare('is_total_weight_price_fixed', $this->is_total_weight_price_fixed);
		$criteria->compare('volume_price', $this->volume_price);
		$criteria->compare('total_volume', $this->total_volume);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('extra_description', $this->extra_description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}